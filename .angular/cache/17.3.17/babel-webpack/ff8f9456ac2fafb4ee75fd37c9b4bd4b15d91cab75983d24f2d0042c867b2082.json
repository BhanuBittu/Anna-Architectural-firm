{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ClientService {\n  constructor() {\n    this.clients = [];\n    this.clientsSubject = new BehaviorSubject(this.clients);\n  }\n  getClients() {\n    return this.clientsSubject.asObservable();\n  }\n  getClientById(id) {\n    return this.clients.find(client => client.id === id);\n  }\n  addClient(client) {\n    const newClient = {\n      ...client,\n      id: this.clients.length > 0 ? Math.max(...this.clients.map(c => c.id)) + 1 : 1\n    };\n    this.clients.push(newClient);\n    this.clientsSubject.next([...this.clients]);\n  }\n  updateClient(updatedClient) {\n    const index = this.clients.findIndex(c => c.id === updatedClient.id);\n    if (index !== -1) {\n      this.clients[index] = updatedClient;\n      this.clientsSubject.next([...this.clients]);\n    }\n  }\n  deleteClient(id) {\n    this.clients = this.clients.filter(c => c.id !== id);\n    this.clientsSubject.next([...this.clients]);\n  }\n  searchClients(query) {\n    const lowercaseQuery = query.toLowerCase();\n    return this.clients.filter(client => client.name.toLowerCase().includes(lowercaseQuery) || client.company.toLowerCase().includes(lowercaseQuery) || client.email.toLowerCase().includes(lowercaseQuery) || client.projectType.toLowerCase().includes(lowercaseQuery));\n  }\n  getClientsByStatus(status) {\n    return this.clients.filter(client => client.status === status);\n  }\n  static {\n    this.ɵfac = function ClientService_Factory(t) {\n      return new (t || ClientService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ClientService,\n      factory: ClientService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","ClientService","constructor","clients","clientsSubject","getClients","asObservable","getClientById","id","find","client","addClient","newClient","length","Math","max","map","c","push","next","updateClient","updatedClient","index","findIndex","deleteClient","filter","searchClients","query","lowercaseQuery","toLowerCase","name","includes","company","email","projectType","getClientsByStatus","status","factory","ɵfac","providedIn"],"sources":["/Users/bveepuri/Client_management/src/app/services/client.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Client } from '../models/client.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n  private clients: Client[] = [];\n\n  private clientsSubject = new BehaviorSubject<Client[]>(this.clients);\n\n  getClients(): Observable<Client[]> {\n    return this.clientsSubject.asObservable();\n  }\n\n  getClientById(id: number): Client | undefined {\n    return this.clients.find(client => client.id === id);\n  }\n\n  addClient(client: Omit<Client, 'id'>): void {\n    const newClient: Client = {\n      ...client,\n      id: this.clients.length > 0 ? Math.max(...this.clients.map(c => c.id)) + 1 : 1\n    };\n    this.clients.push(newClient);\n    this.clientsSubject.next([...this.clients]);\n  }\n\n  updateClient(updatedClient: Client): void {\n    const index = this.clients.findIndex(c => c.id === updatedClient.id);\n    if (index !== -1) {\n      this.clients[index] = updatedClient;\n      this.clientsSubject.next([...this.clients]);\n    }\n  }\n\n  deleteClient(id: number): void {\n    this.clients = this.clients.filter(c => c.id !== id);\n    this.clientsSubject.next([...this.clients]);\n  }\n\n  searchClients(query: string): Client[] {\n    const lowercaseQuery = query.toLowerCase();\n    return this.clients.filter(client =>\n      client.name.toLowerCase().includes(lowercaseQuery) ||\n      client.company.toLowerCase().includes(lowercaseQuery) ||\n      client.email.toLowerCase().includes(lowercaseQuery) ||\n      client.projectType.toLowerCase().includes(lowercaseQuery)\n    );\n  }\n\n  getClientsByStatus(status: Client['status']): Client[] {\n    return this.clients.filter(client => client.status === status);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAMlD,OAAM,MAAOC,aAAa;EAH1BC,YAAA;IAIU,KAAAC,OAAO,GAAa,EAAE;IAEtB,KAAAC,cAAc,GAAG,IAAIJ,eAAe,CAAW,IAAI,CAACG,OAAO,CAAC;;EAEpEE,UAAUA,CAAA;IACR,OAAO,IAAI,CAACD,cAAc,CAACE,YAAY,EAAE;EAC3C;EAEAC,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACL,OAAO,CAACM,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACF,EAAE,KAAKA,EAAE,CAAC;EACtD;EAEAG,SAASA,CAACD,MAA0B;IAClC,MAAME,SAAS,GAAW;MACxB,GAAGF,MAAM;MACTF,EAAE,EAAE,IAAI,CAACL,OAAO,CAACU,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG,IAAI,CAACZ,OAAO,CAACa,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACT,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG;KAC9E;IACD,IAAI,CAACL,OAAO,CAACe,IAAI,CAACN,SAAS,CAAC;IAC5B,IAAI,CAACR,cAAc,CAACe,IAAI,CAAC,CAAC,GAAG,IAAI,CAAChB,OAAO,CAAC,CAAC;EAC7C;EAEAiB,YAAYA,CAACC,aAAqB;IAChC,MAAMC,KAAK,GAAG,IAAI,CAACnB,OAAO,CAACoB,SAAS,CAACN,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKa,aAAa,CAACb,EAAE,CAAC;IACpE,IAAIc,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACnB,OAAO,CAACmB,KAAK,CAAC,GAAGD,aAAa;MACnC,IAAI,CAACjB,cAAc,CAACe,IAAI,CAAC,CAAC,GAAG,IAAI,CAAChB,OAAO,CAAC,CAAC;;EAE/C;EAEAqB,YAAYA,CAAChB,EAAU;IACrB,IAAI,CAACL,OAAO,GAAG,IAAI,CAACA,OAAO,CAACsB,MAAM,CAACR,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKA,EAAE,CAAC;IACpD,IAAI,CAACJ,cAAc,CAACe,IAAI,CAAC,CAAC,GAAG,IAAI,CAAChB,OAAO,CAAC,CAAC;EAC7C;EAEAuB,aAAaA,CAACC,KAAa;IACzB,MAAMC,cAAc,GAAGD,KAAK,CAACE,WAAW,EAAE;IAC1C,OAAO,IAAI,CAAC1B,OAAO,CAACsB,MAAM,CAACf,MAAM,IAC/BA,MAAM,CAACoB,IAAI,CAACD,WAAW,EAAE,CAACE,QAAQ,CAACH,cAAc,CAAC,IAClDlB,MAAM,CAACsB,OAAO,CAACH,WAAW,EAAE,CAACE,QAAQ,CAACH,cAAc,CAAC,IACrDlB,MAAM,CAACuB,KAAK,CAACJ,WAAW,EAAE,CAACE,QAAQ,CAACH,cAAc,CAAC,IACnDlB,MAAM,CAACwB,WAAW,CAACL,WAAW,EAAE,CAACE,QAAQ,CAACH,cAAc,CAAC,CAC1D;EACH;EAEAO,kBAAkBA,CAACC,MAAwB;IACzC,OAAO,IAAI,CAACjC,OAAO,CAACsB,MAAM,CAACf,MAAM,IAAIA,MAAM,CAAC0B,MAAM,KAAKA,MAAM,CAAC;EAChE;;;uBA/CWnC,aAAa;IAAA;EAAA;;;aAAbA,aAAa;MAAAoC,OAAA,EAAbpC,aAAa,CAAAqC,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}