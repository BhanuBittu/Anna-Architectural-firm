{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class MeetingService {\n  constructor() {\n    this.meetings = [];\n    this.meetingsSubject = new BehaviorSubject(this.meetings);\n  }\n  getMeetings() {\n    return this.meetingsSubject.asObservable();\n  }\n  getMeetingById(id) {\n    return this.meetings.find(meeting => meeting.id === id);\n  }\n  getMeetingsByClient(clientId) {\n    return this.meetings.filter(meeting => meeting.clientId === clientId);\n  }\n  addMeeting(meeting) {\n    const newMeeting = {\n      ...meeting,\n      id: this.meetings.length > 0 ? Math.max(...this.meetings.map(m => m.id)) + 1 : 1\n    };\n    this.meetings.push(newMeeting);\n    this.meetingsSubject.next([...this.meetings]);\n  }\n  updateMeeting(updatedMeeting) {\n    const index = this.meetings.findIndex(m => m.id === updatedMeeting.id);\n    if (index !== -1) {\n      this.meetings[index] = updatedMeeting;\n      this.meetingsSubject.next([...this.meetings]);\n    }\n  }\n  deleteMeeting(id) {\n    this.meetings = this.meetings.filter(m => m.id !== id);\n    this.meetingsSubject.next([...this.meetings]);\n  }\n  getUpcomingMeetings() {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return this.meetings.filter(meeting => {\n      const meetingDate = new Date(meeting.date);\n      meetingDate.setHours(0, 0, 0, 0);\n      return meetingDate >= today && meeting.status === 'scheduled';\n    }).sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  }\n  getTodaysMeetings() {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    return this.meetings.filter(meeting => {\n      const meetingDate = new Date(meeting.date);\n      return meetingDate >= today && meetingDate < tomorrow && meeting.status === 'scheduled';\n    });\n  }\n  getMeetingsByDateRange(startDate, endDate) {\n    return this.meetings.filter(meeting => {\n      const meetingDate = new Date(meeting.date);\n      return meetingDate >= startDate && meetingDate <= endDate;\n    });\n  }\n  static {\n    this.ɵfac = function MeetingService_Factory(t) {\n      return new (t || MeetingService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MeetingService,\n      factory: MeetingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","MeetingService","constructor","meetings","meetingsSubject","getMeetings","asObservable","getMeetingById","id","find","meeting","getMeetingsByClient","clientId","filter","addMeeting","newMeeting","length","Math","max","map","m","push","next","updateMeeting","updatedMeeting","index","findIndex","deleteMeeting","getUpcomingMeetings","today","Date","setHours","meetingDate","date","status","sort","a","b","getTime","getTodaysMeetings","tomorrow","setDate","getDate","getMeetingsByDateRange","startDate","endDate","factory","ɵfac","providedIn"],"sources":["/Users/bveepuri/Client_management/src/app/services/meeting.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Meeting } from '../models/meeting.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeetingService {\n  private meetings: Meeting[] = [];\n\n  private meetingsSubject = new BehaviorSubject<Meeting[]>(this.meetings);\n\n  getMeetings(): Observable<Meeting[]> {\n    return this.meetingsSubject.asObservable();\n  }\n\n  getMeetingById(id: number): Meeting | undefined {\n    return this.meetings.find(meeting => meeting.id === id);\n  }\n\n  getMeetingsByClient(clientId: number): Meeting[] {\n    return this.meetings.filter(meeting => meeting.clientId === clientId);\n  }\n\n  addMeeting(meeting: Omit<Meeting, 'id'>): void {\n    const newMeeting: Meeting = {\n      ...meeting,\n      id: this.meetings.length > 0 ? Math.max(...this.meetings.map(m => m.id)) + 1 : 1\n    };\n    this.meetings.push(newMeeting);\n    this.meetingsSubject.next([...this.meetings]);\n  }\n\n  updateMeeting(updatedMeeting: Meeting): void {\n    const index = this.meetings.findIndex(m => m.id === updatedMeeting.id);\n    if (index !== -1) {\n      this.meetings[index] = updatedMeeting;\n      this.meetingsSubject.next([...this.meetings]);\n    }\n  }\n\n  deleteMeeting(id: number): void {\n    this.meetings = this.meetings.filter(m => m.id !== id);\n    this.meetingsSubject.next([...this.meetings]);\n  }\n\n  getUpcomingMeetings(): Meeting[] {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return this.meetings\n      .filter(meeting => {\n        const meetingDate = new Date(meeting.date);\n        meetingDate.setHours(0, 0, 0, 0);\n        return meetingDate >= today && meeting.status === 'scheduled';\n      })\n      .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  }\n\n  getTodaysMeetings(): Meeting[] {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n\n    return this.meetings.filter(meeting => {\n      const meetingDate = new Date(meeting.date);\n      return meetingDate >= today && meetingDate < tomorrow && meeting.status === 'scheduled';\n    });\n  }\n\n  getMeetingsByDateRange(startDate: Date, endDate: Date): Meeting[] {\n    return this.meetings.filter(meeting => {\n      const meetingDate = new Date(meeting.date);\n      return meetingDate >= startDate && meetingDate <= endDate;\n    });\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAMlD,OAAM,MAAOC,cAAc;EAH3BC,YAAA;IAIU,KAAAC,QAAQ,GAAc,EAAE;IAExB,KAAAC,eAAe,GAAG,IAAIJ,eAAe,CAAY,IAAI,CAACG,QAAQ,CAAC;;EAEvEE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,eAAe,CAACE,YAAY,EAAE;EAC5C;EAEAC,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACL,QAAQ,CAACM,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACF,EAAE,KAAKA,EAAE,CAAC;EACzD;EAEAG,mBAAmBA,CAACC,QAAgB;IAClC,OAAO,IAAI,CAACT,QAAQ,CAACU,MAAM,CAACH,OAAO,IAAIA,OAAO,CAACE,QAAQ,KAAKA,QAAQ,CAAC;EACvE;EAEAE,UAAUA,CAACJ,OAA4B;IACrC,MAAMK,UAAU,GAAY;MAC1B,GAAGL,OAAO;MACVF,EAAE,EAAE,IAAI,CAACL,QAAQ,CAACa,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG,IAAI,CAACf,QAAQ,CAACgB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACZ,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG;KAChF;IACD,IAAI,CAACL,QAAQ,CAACkB,IAAI,CAACN,UAAU,CAAC;IAC9B,IAAI,CAACX,eAAe,CAACkB,IAAI,CAAC,CAAC,GAAG,IAAI,CAACnB,QAAQ,CAAC,CAAC;EAC/C;EAEAoB,aAAaA,CAACC,cAAuB;IACnC,MAAMC,KAAK,GAAG,IAAI,CAACtB,QAAQ,CAACuB,SAAS,CAACN,CAAC,IAAIA,CAAC,CAACZ,EAAE,KAAKgB,cAAc,CAAChB,EAAE,CAAC;IACtE,IAAIiB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACtB,QAAQ,CAACsB,KAAK,CAAC,GAAGD,cAAc;MACrC,IAAI,CAACpB,eAAe,CAACkB,IAAI,CAAC,CAAC,GAAG,IAAI,CAACnB,QAAQ,CAAC,CAAC;;EAEjD;EAEAwB,aAAaA,CAACnB,EAAU;IACtB,IAAI,CAACL,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACU,MAAM,CAACO,CAAC,IAAIA,CAAC,CAACZ,EAAE,KAAKA,EAAE,CAAC;IACtD,IAAI,CAACJ,eAAe,CAACkB,IAAI,CAAC,CAAC,GAAG,IAAI,CAACnB,QAAQ,CAAC,CAAC;EAC/C;EAEAyB,mBAAmBA,CAAA;IACjB,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;IACxBD,KAAK,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1B,OAAO,IAAI,CAAC5B,QAAQ,CACjBU,MAAM,CAACH,OAAO,IAAG;MAChB,MAAMsB,WAAW,GAAG,IAAIF,IAAI,CAACpB,OAAO,CAACuB,IAAI,CAAC;MAC1CD,WAAW,CAACD,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAChC,OAAOC,WAAW,IAAIH,KAAK,IAAInB,OAAO,CAACwB,MAAM,KAAK,WAAW;IAC/D,CAAC,CAAC,CACDC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIP,IAAI,CAACM,CAAC,CAACH,IAAI,CAAC,CAACK,OAAO,EAAE,GAAG,IAAIR,IAAI,CAACO,CAAC,CAACJ,IAAI,CAAC,CAACK,OAAO,EAAE,CAAC;EAC5E;EAEAC,iBAAiBA,CAAA;IACf,MAAMV,KAAK,GAAG,IAAIC,IAAI,EAAE;IACxBD,KAAK,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1B,MAAMS,QAAQ,GAAG,IAAIV,IAAI,CAACD,KAAK,CAAC;IAChCW,QAAQ,CAACC,OAAO,CAACD,QAAQ,CAACE,OAAO,EAAE,GAAG,CAAC,CAAC;IAExC,OAAO,IAAI,CAACvC,QAAQ,CAACU,MAAM,CAACH,OAAO,IAAG;MACpC,MAAMsB,WAAW,GAAG,IAAIF,IAAI,CAACpB,OAAO,CAACuB,IAAI,CAAC;MAC1C,OAAOD,WAAW,IAAIH,KAAK,IAAIG,WAAW,GAAGQ,QAAQ,IAAI9B,OAAO,CAACwB,MAAM,KAAK,WAAW;IACzF,CAAC,CAAC;EACJ;EAEAS,sBAAsBA,CAACC,SAAe,EAAEC,OAAa;IACnD,OAAO,IAAI,CAAC1C,QAAQ,CAACU,MAAM,CAACH,OAAO,IAAG;MACpC,MAAMsB,WAAW,GAAG,IAAIF,IAAI,CAACpB,OAAO,CAACuB,IAAI,CAAC;MAC1C,OAAOD,WAAW,IAAIY,SAAS,IAAIZ,WAAW,IAAIa,OAAO;IAC3D,CAAC,CAAC;EACJ;;;uBApEW5C,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAA6C,OAAA,EAAd7C,cAAc,CAAA8C,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}