{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class MeetingService {\n  constructor() {\n    this.meetings = [{\n      id: 1,\n      clientId: 1,\n      clientName: 'John Smith',\n      title: 'Initial Consultation',\n      description: 'Discuss project requirements and timeline for residential design',\n      date: new Date('2024-11-05'),\n      time: '10:00',\n      duration: 60,\n      location: 'Office - Conference Room A',\n      type: 'consultation',\n      status: 'scheduled',\n      createdDate: new Date('2024-10-20')\n    }, {\n      id: 2,\n      clientId: 2,\n      clientName: 'Sarah Johnson',\n      title: 'Project Review Meeting',\n      description: 'Review initial commercial building designs and get client feedback',\n      date: new Date('2024-11-08'),\n      time: '14:00',\n      duration: 90,\n      location: 'Client Site - Johnson Corp',\n      type: 'project-review',\n      status: 'scheduled',\n      createdDate: new Date('2024-10-25')\n    }, {\n      id: 3,\n      clientId: 3,\n      clientName: 'Mike Davis',\n      title: 'Follow-up Discussion',\n      description: 'Follow up on mixed-use development proposal',\n      date: new Date('2024-11-15'),\n      time: '11:00',\n      duration: 45,\n      location: 'Virtual Meeting',\n      type: 'follow-up',\n      status: 'scheduled',\n      createdDate: new Date('2024-11-01')\n    }];\n    this.meetingsSubject = new BehaviorSubject(this.meetings);\n  }\n  getMeetings() {\n    return this.meetingsSubject.asObservable();\n  }\n  getMeetingById(id) {\n    return this.meetings.find(meeting => meeting.id === id);\n  }\n  getMeetingsByClient(clientId) {\n    return this.meetings.filter(meeting => meeting.clientId === clientId);\n  }\n  addMeeting(meeting) {\n    const newMeeting = {\n      ...meeting,\n      id: this.meetings.length > 0 ? Math.max(...this.meetings.map(m => m.id)) + 1 : 1\n    };\n    this.meetings.push(newMeeting);\n    this.meetingsSubject.next([...this.meetings]);\n  }\n  updateMeeting(updatedMeeting) {\n    const index = this.meetings.findIndex(m => m.id === updatedMeeting.id);\n    if (index !== -1) {\n      this.meetings[index] = updatedMeeting;\n      this.meetingsSubject.next([...this.meetings]);\n    }\n  }\n  deleteMeeting(id) {\n    this.meetings = this.meetings.filter(m => m.id !== id);\n    this.meetingsSubject.next([...this.meetings]);\n  }\n  getUpcomingMeetings() {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return this.meetings.filter(meeting => {\n      const meetingDate = new Date(meeting.date);\n      meetingDate.setHours(0, 0, 0, 0);\n      return meetingDate >= today && meeting.status === 'scheduled';\n    }).sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  }\n  getTodaysMeetings() {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    return this.meetings.filter(meeting => {\n      const meetingDate = new Date(meeting.date);\n      return meetingDate >= today && meetingDate < tomorrow && meeting.status === 'scheduled';\n    });\n  }\n  getMeetingsByDateRange(startDate, endDate) {\n    return this.meetings.filter(meeting => {\n      const meetingDate = new Date(meeting.date);\n      return meetingDate >= startDate && meetingDate <= endDate;\n    });\n  }\n  static {\n    this.ɵfac = function MeetingService_Factory(t) {\n      return new (t || MeetingService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MeetingService,\n      factory: MeetingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","MeetingService","constructor","meetings","id","clientId","clientName","title","description","date","Date","time","duration","location","type","status","createdDate","meetingsSubject","getMeetings","asObservable","getMeetingById","find","meeting","getMeetingsByClient","filter","addMeeting","newMeeting","length","Math","max","map","m","push","next","updateMeeting","updatedMeeting","index","findIndex","deleteMeeting","getUpcomingMeetings","today","setHours","meetingDate","sort","a","b","getTime","getTodaysMeetings","tomorrow","setDate","getDate","getMeetingsByDateRange","startDate","endDate","factory","ɵfac","providedIn"],"sources":["/Users/bveepuri/Client_management/src/app/services/meeting.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Meeting } from '../models/meeting.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeetingService {\n  private meetings: Meeting[] = [\n    {\n      id: 1,\n      clientId: 1,\n      clientName: 'John Smith',\n      title: 'Initial Consultation',\n      description: 'Discuss project requirements and timeline for residential design',\n      date: new Date('2024-11-05'),\n      time: '10:00',\n      duration: 60,\n      location: 'Office - Conference Room A',\n      type: 'consultation',\n      status: 'scheduled',\n      createdDate: new Date('2024-10-20')\n    },\n    {\n      id: 2,\n      clientId: 2,\n      clientName: 'Sarah Johnson',\n      title: 'Project Review Meeting',\n      description: 'Review initial commercial building designs and get client feedback',\n      date: new Date('2024-11-08'),\n      time: '14:00',\n      duration: 90,\n      location: 'Client Site - Johnson Corp',\n      type: 'project-review',\n      status: 'scheduled',\n      createdDate: new Date('2024-10-25')\n    },\n    {\n      id: 3,\n      clientId: 3,\n      clientName: 'Mike Davis',\n      title: 'Follow-up Discussion',\n      description: 'Follow up on mixed-use development proposal',\n      date: new Date('2024-11-15'),\n      time: '11:00',\n      duration: 45,\n      location: 'Virtual Meeting',\n      type: 'follow-up',\n      status: 'scheduled',\n      createdDate: new Date('2024-11-01')\n    }\n  ];\n\n  private meetingsSubject = new BehaviorSubject<Meeting[]>(this.meetings);\n\n  getMeetings(): Observable<Meeting[]> {\n    return this.meetingsSubject.asObservable();\n  }\n\n  getMeetingById(id: number): Meeting | undefined {\n    return this.meetings.find(meeting => meeting.id === id);\n  }\n\n  getMeetingsByClient(clientId: number): Meeting[] {\n    return this.meetings.filter(meeting => meeting.clientId === clientId);\n  }\n\n  addMeeting(meeting: Omit<Meeting, 'id'>): void {\n    const newMeeting: Meeting = {\n      ...meeting,\n      id: this.meetings.length > 0 ? Math.max(...this.meetings.map(m => m.id)) + 1 : 1\n    };\n    this.meetings.push(newMeeting);\n    this.meetingsSubject.next([...this.meetings]);\n  }\n\n  updateMeeting(updatedMeeting: Meeting): void {\n    const index = this.meetings.findIndex(m => m.id === updatedMeeting.id);\n    if (index !== -1) {\n      this.meetings[index] = updatedMeeting;\n      this.meetingsSubject.next([...this.meetings]);\n    }\n  }\n\n  deleteMeeting(id: number): void {\n    this.meetings = this.meetings.filter(m => m.id !== id);\n    this.meetingsSubject.next([...this.meetings]);\n  }\n\n  getUpcomingMeetings(): Meeting[] {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return this.meetings\n      .filter(meeting => {\n        const meetingDate = new Date(meeting.date);\n        meetingDate.setHours(0, 0, 0, 0);\n        return meetingDate >= today && meeting.status === 'scheduled';\n      })\n      .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  }\n\n  getTodaysMeetings(): Meeting[] {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n\n    return this.meetings.filter(meeting => {\n      const meetingDate = new Date(meeting.date);\n      return meetingDate >= today && meetingDate < tomorrow && meeting.status === 'scheduled';\n    });\n  }\n\n  getMeetingsByDateRange(startDate: Date, endDate: Date): Meeting[] {\n    return this.meetings.filter(meeting => {\n      const meetingDate = new Date(meeting.date);\n      return meetingDate >= startDate && meetingDate <= endDate;\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}